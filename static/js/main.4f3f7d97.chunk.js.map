{"version":3,"sources":["service/expenses/expenses.service.js","context/ExpenseContext.jsx","utils/fechas.js","pages/header/HeaderContent.jsx","pages/header/Header.jsx","components/expenses/list-expenses/ListExpenses.jsx","service/dates.utils.js","components/expenses/new-expenses/NewExpenses.jsx","pages/Home.jsx","App.js","config.js","reportWebVitals.js","index.js"],"names":["listExpensesAllExpenses","API","get","then","data","catch","error","console","expenses","total","reduce","prev","curr","Number","cantidad","gastos","fecha","Date","getTime","defaultValueContext","isLoading","ExpenseContext","createContext","ExpenseProvider","children","useState","setExpanses","useEffect","Provider","value","expense","post","body","addExpense","newExpense","getMonthAndYearByMilisecond","miliseconds","date","options","month","year","toLocaleDateString","HeaderContent","className","Header","useContext","ListExpenses","map","index","gasto","persona","nota","prototype","PropTypes","array","currentDate","dateNow","getDay","getMonth","getFullYear","NewExpenses","addNewExpense","setNewExpense","onChange","event","target","name","onSubmit","preventDefault","htmlFor","type","id","object","func","defaultProps","Home","saveNewExpense","App","config","apiGateway","REGION","process","URL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","endpoints","endpoint","region","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f3f7d97.chunk.js","sourcesContent":["import { API } from \"aws-amplify\";\n\n\nexport const addExpense = (expense) => {\n  return API.post('api-expense', '/expense-api',{body: expense})\n    .then(data => data)\n    .catch(error => {\n      console.error('error al guardar nuevo gasto', error);\n      throw error;\n    });\n}\n\nexport const listExpenses = () => {\n  return API.get('api-expense', '/expense-api','')\n    .then(data => data)\n    .catch(error => {console.error('Error al cargar lista gastos', error); return [];});\n}\n\n\nexport const listExpensesAllExpenses = () => {\n  return listExpenses().then(expenses => {\n    const total = expenses.reduce((prev, curr) => {\n      const valor = prev + Number(curr.cantidad);\n      return valor;\n    }\n    , 0);\n    return {\n      total,\n      gastos: expenses,\n      fecha: new Date().getTime()\n    };\n  });\n}","import { createContext, useEffect, useState } from 'react';\nimport { addExpense, listExpensesAllExpenses } from './../service/expenses/expenses.service';\n\nconst defaultValueContext = [\n  {\n    gastos: [],\n    fecha: new Date().getTime(),\n    total: 0,\n    isLoading: false\n  },\n  () => {}\n]\n\nexport const ExpenseContext = createContext(defaultValueContext);\n\nconst ExpenseProvider = ({children}) => {\n  const [expenses, setExpanses] = useState(defaultValueContext[0]);\n\n  useEffect(() => {\n    setExpanses(expenses, {isLoading: false});\n    listExpensesAllExpenses().then(({gastos, fecha, total}) => setExpanses({gastos, fecha, total, isLoading: false}));\n  }, []);\n\n  const saveNewExpense = (expense) => {\n    addExpense(expense)\n      .then(newExpense => {\n        const gastos = [newExpense, ...expenses.gastos];\n        const total = expenses.total + Number(newExpense.cantidad || 0);\n        setExpanses({...expenses, gastos, total});\n      });\n  }\n\n  return (\n    <ExpenseContext.Provider value={[expenses, saveNewExpense]}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n};\n\nexport default ExpenseProvider;","export const getMonthAndYearByMilisecond = (miliseconds) => {\n  const date = new Date(miliseconds);\n  const options = { month: 'long', year: 'numeric' };\n  date.toLocaleDateString('es-ES', options);\n  return date.toLocaleDateString('es-ES', options);\n}","import React from 'react';\nimport { getMonthAndYearByMilisecond } from './../../utils/fechas';\n\nexport const HeaderContent = ({fecha, total}) => {\n  return (\n    <div className=\"Header\">\n      <div className=\"header__titulo\">Gastos de {getMonthAndYearByMilisecond(fecha)} </div>\n      <div className=\"header__gasto\">total: {total} â‚¬</div>\n    </div>\n  )\n}\n\n","import React, { useContext } from 'react';\nimport { ExpenseContext } from './../../context/ExpenseContext';\nimport './Header.css';\nimport { HeaderContent } from './HeaderContent';\n\n\nexport const  Header = () => {\n  const [{fecha, total}] = useContext(ExpenseContext);\n  return (\n    <HeaderContent fecha={fecha} total={total}/>\n  )\n}\n\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './ListExpense.css';\n\n\nexport const  ListExpenses = ({expenses}) => {\n  return (\n    <div className=\"list-expanse\">\n      <div className=\"list-expanse__header\">\n          <div>Gasto</div>\n          <div>Cantidad</div>\n          <div>Fecha</div>\n          <div>Persona</div>\n          <div>Nota</div>\n      </div>\n      {expenses && expenses.map((expense, index) => {\n        return (\n          <div key={index} className=\"list-expanse__boddy\">\n            <div>{expense.gasto}</div>\n            <div>{expense.cantidad}</div>\n            <div>{expense.fecha}</div>\n            <div>{expense.persona}</div>\n            <div>{expense.nota}</div>\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nListExpenses.prototype = {\n  expenses: PropTypes.array\n};\n\nexport default ListExpenses;","export const currentDate = () => {\n  const dateNow = new Date();\n  return `${dateNow.getDay() < 10? 0 : ''}${dateNow.getDay()}/${dateNow.getMonth() < 10? 0 : ''}${dateNow.getMonth()+1}/${dateNow.getFullYear()}`\n}","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { currentDate } from './../../../service/dates.utils';\nimport './NewExpenses.css';\n\nexport const NewExpenses = ({expense, addNewExpense}) => {\n\n  const [newExpense, setNewExpense] = useState(expense);\n  \n  const onSubmit = (event) => {\n    event.preventDefault();\n    addNewExpense({...newExpense, fecha: currentDate()});\n    setNewExpense(expense);\n  };\n\n  const onChange = (event) => {\n    const {name, value} = event.target;\n    setNewExpense({...newExpense, [name]: value});\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"form-expenses\">\n      <div className=\"form-expenses__input\">\n        <label htmlFor=\"cantidad\">Cantidad: </label>\n        <input type=\"number\" name=\"cantidad\" id=\"cantidad\" onChange={onChange} value={newExpense.cantidad}/>\n      </div>\n      <div className=\"form-expenses__input\">\n        <label htmlFor=\"gasto\">Gasto: </label>\n        <input type=\"text\" name=\"gasto\" id=\"gasto\" onChange={onChange} value={newExpense.gasto}/>\n      </div>\n      <div className=\"form-expenses__submit\">\n        <button>Nuevo gasto</button>\n      </div>\n    </form>\n  );\n};\n\nNewExpenses.prototype = {\n  expense: PropTypes.object,\n  addNewExpense: PropTypes.func\n};\nNewExpenses.defaultProps = {\n  expense: {cantidad: '', gasto: ''}\n};\n\nexport default NewExpenses;\n","import React, { useContext } from 'react';\nimport { ListExpenses } from '../components/expenses/list-expenses/ListExpenses';\nimport { NewExpenses } from '../components/expenses/new-expenses/NewExpenses';\nimport { ExpenseContext } from './../context/ExpenseContext';\n\nexport const Home = () => {\n\n  const [{gastos}, saveNewExpense] = useContext(ExpenseContext);\n\n  const addNewExpense = (expense) => {\n    debugger;\n    saveNewExpense(expense);\n  }\n  \n  return (\n    <div>\n      <NewExpenses addNewExpense={addNewExpense}/>\n      <ListExpenses expenses={gastos}/>\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport ExpenseProvider from './context/ExpenseContext';\nimport { Header } from './pages/header/Header';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <ExpenseProvider>\n        <Header />\n        <Home />\n      </ExpenseProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const config = {\n  apiGateway: {\n      REGION: process.env.REACT_APP_API_GATEWAY_REGION,\n      URL: process.env.REACT_APP_API_GATEWAY_ENDPOINT,\n  }\n}\n\nexport default config;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Amplify } from 'aws-amplify';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport config from './config';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nAmplify.configure({\n  API: {\n    endpoints: [{\n      name: 'api-expense',\n      endpoint: config.apiGateway.URL,\n      region: config.apiGateway.REGION\n    }]\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}