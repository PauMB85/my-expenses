{"version":3,"sources":["routes/AppRouter.jsx","App.js","config.js","reportWebVitals.js","index.js","service/expenses/expenses.service.js","context/ExpenseContext.jsx"],"names":["Login","lazy","Signup","Home","AppRouter","hasUserLoged","localStorage","getItem","fallback","exact","path","element","App","className","config","cognito","REGION","process","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","apiGateway","URL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","Auth","region","userPoolId","identityPoolId","userPoolWebClientId","API","endpoints","name","endpoint","ReactDOM","render","StrictMode","document","getElementById","listExpensesAllExpenses","get","data","catch","error","console","expenses","total","reduce","prev","curr","Number","cantidad","gastos","fecha","Date","getTime","defaultValueContext","isLoading","ExpenseContext","createContext","ExpenseProvider","children","useState","setExpanses","useEffect","Provider","value","expense","post","body","addExpense","newExpense"],"mappings":"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","file":"static/js/main.4902e3b4.chunk.js","sourcesContent":["import { lazy, Suspense } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\n\nconst Login = lazy(() => import('./../pages/login/Login'));\nconst Signup = lazy(() => import('./../pages/signup/SignUp'));\nconst Home = lazy(() => import('./../pages/Home'));\n\nexport const AppRouter = () => {\n  const hasUserLoged = localStorage.getItem('user')? true : false\n  return (\n    <Suspense fallback={<h2>I am loading...</h2>}>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/login\" element={<Login />}/>\n          <Route exact path=\"/signup\" element={<Signup/>}/>\n          <Route exact path=\"/home\" element={<Home />}/>\n          <Route exact path=\"/\" element={hasUserLoged? <Home /> : <Login />}/>\n        </Routes>\n      </BrowserRouter>\n    </Suspense>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport ExpenseProvider from './context/ExpenseContext';\nimport { AppRouter } from './routes/AppRouter';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <ExpenseProvider>\n        <AppRouter />\n      </ExpenseProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const config = {\n  cognito: {\n    REGION: process.env.REACT_APP_COGNITO_REGION,\n    USER_POOL_ID: process.env.REACT_APP_USER_POOL_ID,\n    APP_CLIENT_ID: process.env.REACT_APP_COGNITO_APP_CLIENT_ID,\n    IDENTITY_POOL_ID: process.env.REACT_APP_COGNITO_IDENTITY_POOL_ID\n  },\n  apiGateway: {\n    REGION: process.env.REACT_APP_API_GATEWAY_REGION,\n    URL: process.env.REACT_APP_API_GATEWAY_ENDPOINT,\n  }\n}\n\nexport default config;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Amplify } from 'aws-amplify';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport config from './config';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nAmplify.configure({\n  Auth: {\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  API: {\n    endpoints: [{\n      name: 'api-expense',\n      endpoint: config.apiGateway.URL,\n      region: config.apiGateway.REGION\n    }]\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { API } from \"aws-amplify\";\n\n\nexport const addExpense = (expense) => {\n  return API.post('api-expense', '/expense-api',{body: expense})\n    .then(data => data)\n    .catch(error => {\n      console.error('error al guardar nuevo gasto', error);\n      throw error;\n    });\n}\n\nexport const listExpenses = () => {\n  return API.get('api-expense', '/expense-api','')\n    .then(data => data)\n    .catch(error => {console.error('Error al cargar lista gastos', error); return [];});\n}\n\n\nexport const listExpensesAllExpenses = () => {\n  return listExpenses().then(expenses => {\n    const total = expenses.reduce((prev, curr) => {\n      const valor = prev + Number(curr.cantidad);\n      return valor;\n    }\n    , 0);\n    return {\n      total,\n      gastos: expenses,\n      fecha: new Date().getTime()\n    };\n  });\n}","import { createContext, useEffect, useState } from 'react';\nimport { addExpense, listExpensesAllExpenses } from './../service/expenses/expenses.service';\n\nconst defaultValueContext = [\n  {\n    gastos: [],\n    fecha: new Date().getTime(),\n    total: 0,\n    isLoading: false\n  },\n  () => {}\n]\n\nexport const ExpenseContext = createContext(defaultValueContext);\n\nconst ExpenseProvider = ({children}) => {\n  const [expenses, setExpanses] = useState(defaultValueContext[0]);\n\n  useEffect(() => {\n    setExpanses(expenses, {isLoading: false});\n    listExpensesAllExpenses().then(({gastos, fecha, total}) => setExpanses({gastos, fecha, total, isLoading: false}));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const saveNewExpense = (expense) => {\n    addExpense(expense)\n      .then(newExpense => {\n        const gastos = [newExpense, ...expenses.gastos];\n        const total = expenses.total + Number(newExpense.cantidad || 0);\n        setExpanses({...expenses, gastos, total});\n      });\n  }\n\n  return (\n    <ExpenseContext.Provider value={[expenses, saveNewExpense]}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n};\n\nexport default ExpenseProvider;"],"sourceRoot":""}